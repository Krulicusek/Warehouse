//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ServiceModel;

namespace ServiceReference1
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "WarehouseWebService", ConfigurationName = "ServiceReference1.WarehouseWebServiceSoap")]
    public interface WarehouseWebServiceSoap
    {

        [System.ServiceModel.OperationContractAttribute(Action = "WarehouseWebService/SendZamowienie", ReplyAction = "*")]
        System.Threading.Tasks.Task<ServiceReference1.SendZamowienieResponse> SendZamowienieAsync(ServiceReference1.SendZamowienieRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "WarehouseWebService/GetTowary", ReplyAction = "*")]
        System.Threading.Tasks.Task<ServiceReference1.GetTowaryResponse> GetTowaryAsync(ServiceReference1.GetTowaryRequest request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class SendZamowienieRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "SendZamowienie", Namespace = "WarehouseWebService", Order = 0)]
        public ServiceReference1.SendZamowienieRequestBody Body;

        public SendZamowienieRequest()
        {
        }

        public SendZamowienieRequest(ServiceReference1.SendZamowienieRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "WarehouseWebService")]
    public partial class SendZamowienieRequestBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
        public int id;

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public int ilosc;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
        public string imie;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 3)]
        public string nazwisko;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 4)]
        public string adres;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 5)]
        public string dostawa;

        public SendZamowienieRequestBody()
        {
        }

        public SendZamowienieRequestBody(int id, int ilosc, string imie, string nazwisko, string adres, string dostawa)
        {
            this.id = id;
            this.ilosc = ilosc;
            this.imie = imie;
            this.nazwisko = nazwisko;
            this.adres = adres;
            this.dostawa = dostawa;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class SendZamowienieResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "SendZamowienieResponse", Namespace = "WarehouseWebService", Order = 0)]
        public ServiceReference1.SendZamowienieResponseBody Body;

        public SendZamowienieResponse()
        {
        }

        public SendZamowienieResponse(ServiceReference1.SendZamowienieResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SendZamowienieResponseBody
    {

        public SendZamowienieResponseBody()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetTowaryRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTowary", Namespace = "WarehouseWebService", Order = 0)]
        public ServiceReference1.GetTowaryRequestBody Body;

        public GetTowaryRequest()
        {
        }

        public GetTowaryRequest(ServiceReference1.GetTowaryRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetTowaryRequestBody
    {

        public GetTowaryRequestBody()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetTowaryResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTowaryResponse", Namespace = "WarehouseWebService", Order = 0)]
        public ServiceReference1.GetTowaryResponseBody Body;

        public GetTowaryResponse()
        {
        }

        public GetTowaryResponse(ServiceReference1.GetTowaryResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "WarehouseWebService")]
    public partial class GetTowaryResponseBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public string GetTowaryResult;

        public GetTowaryResponseBody()
        {
        }

        public GetTowaryResponseBody(string GetTowaryResult)
        {
            this.GetTowaryResult = GetTowaryResult;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface WarehouseWebServiceSoapChannel : ServiceReference1.WarehouseWebServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class WarehouseWebServiceSoapClient : System.ServiceModel.ClientBase<ServiceReference1.WarehouseWebServiceSoap>, ServiceReference1.WarehouseWebServiceSoap
    {

        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>

        public WarehouseWebServiceSoapClient(TimeSpan timeout, string endpointUrl) :
         base(WarehouseWebServiceSoapClient.GetBindingForEndpoint(timeout), WarehouseWebServiceSoapClient.GetEndpointAddress(endpointUrl))
        {

            //ConfigureEndpoint(this.Endpoint);
        }

        public WarehouseWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
         base(binding, remoteAddress)
        {
        }



        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SendZamowienieResponse> ServiceReference1.WarehouseWebServiceSoap.SendZamowienieAsync(ServiceReference1.SendZamowienieRequest request)
        {
            return base.Channel.SendZamowienieAsync(request);
        }

        public System.Threading.Tasks.Task<ServiceReference1.SendZamowienieResponse> SendZamowienieAsync(int id, int ilosc, string imie, string nazwisko, string adres, string dostawa)
        {
            ServiceReference1.SendZamowienieRequest inValue = new ServiceReference1.SendZamowienieRequest();
            inValue.Body = new ServiceReference1.SendZamowienieRequestBody();
            inValue.Body.id = id;
            inValue.Body.ilosc = ilosc;
            inValue.Body.imie = imie;
            inValue.Body.nazwisko = nazwisko;
            inValue.Body.adres = adres;
            inValue.Body.dostawa = dostawa;
            return ((ServiceReference1.WarehouseWebServiceSoap)(this)).SendZamowienieAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetTowaryResponse> ServiceReference1.WarehouseWebServiceSoap.GetTowaryAsync(ServiceReference1.GetTowaryRequest request)
        {
            return base.Channel.GetTowaryAsync(request);
        }

        public System.Threading.Tasks.Task<ServiceReference1.GetTowaryResponse> GetTowaryAsync()
        {
            ServiceReference1.GetTowaryRequest inValue = new ServiceReference1.GetTowaryRequest();
            inValue.Body = new ServiceReference1.GetTowaryRequestBody();
            return ((ServiceReference1.WarehouseWebServiceSoap)(this)).GetTowaryAsync(inValue);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(TimeSpan timeout)
        {
            var httpsBinding = new BasicHttpsBinding();
            httpsBinding.Security.Transport.ClientCredentialType = HttpClientCredentialType.Basic;
            httpsBinding.Security.Mode = BasicHttpsSecurityMode.Transport;

            var integerMaxValue = int.MaxValue;
            httpsBinding.MaxBufferSize = integerMaxValue;
            httpsBinding.MaxReceivedMessageSize = integerMaxValue;
            httpsBinding.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            httpsBinding.AllowCookies = true;

            httpsBinding.ReceiveTimeout = timeout;
            httpsBinding.SendTimeout = timeout;
            httpsBinding.OpenTimeout = timeout;
            httpsBinding.CloseTimeout = timeout;

            return httpsBinding;
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(string endpointUrl)
        {
            if (!endpointUrl.StartsWith("https://"))
            {
                throw new UriFormatException("The endpoint URL must start with https://.");
            }
            return new System.ServiceModel.EndpointAddress(endpointUrl);
        }
    }
}
